@namespace("edu.berkeley.amplab.adam.avro")
protocol ADAM {

enum ADAMAlignmentFlag {
   UNKNOWN_FLAG,
   READ_PAIRED,
   PROPER_PAIR,
   READ_UNMAPPED,
   MATE_UNMAPPED,
   READ_NEGATIVE_STRAND,
   MATE_NEGATIVE_STRAND,
   FIRST_OF_PAIR,
   SECOND_OF_PAIR,
   NOT_PRIMARY_ALIGNMENT,
   READ_FAILS_VENDOR_QUALITY_CHECK,
   DUPLICATE_READ
}

enum ADAMCigarOperation {
    UNKNOWN_OPERATION,
    ALIGNMENT_MATCH,
    INSERTION_TO_THE_REFERENCE,
    DELETION_FROM_THE_REFERENCE,
    SKIPPED_REGION_FROM_THE_REFERENCE,
    SOFT_CLIPPING,
    HARD_CLIPPING,
    PADDING,
    SEQUENCE_MATCH,
    SEQUENCE_MISMATCH
}

record ADAMCigarOperationInfo {
    long magnitude;
    ADAMCigarOperation op;
}

record ADAMReferencePosition {
    // The reference name
    string referenceName;
    // The 0-based reference position
    long position;
}

record ADAMRecord {
    // Reference genome name
    string referenceName;

    // Reference genome length
    long referenceLength;

    // 0-based start position relative to reference
    long start;

    // 0-based end position relative to reference
    long end;

    // mapping quality
    long mapq;

    // observed template length
    long tlen;

    // Optional fields
    union { null, string } readName = null;
    union { null, string } sequence = null;
    union { null, array<ADAMAlignmentFlag> } flags = null;
    union { null, ADAMReferencePosition } nextReference = null;
    union { null, array<ADAMCigarOperationInfo> } cigar = null;
    union { null, string } qual = null;
}

record ADAMSequenceRecordAttribute {
    string name;
    string value;
}

record ADAMSequenceRecord {
    // Reference Id
    long referenceId;
    // Reference sequence name
    string referenceName;
    // Length of the reference sequence
    long referenceLength;

    // Optional Fields
    union { null, string } assemblyId;
    union { null, string } md5;
    union { null, string } species;
    union { null, string } uri;
    union { null, array<ADAMSequenceRecordAttribute> } attributes;
}

}
